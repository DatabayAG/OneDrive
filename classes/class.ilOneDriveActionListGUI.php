<?php
require_once('./Modules/Cloud/classes/class.ilCloudPluginActionListGUI.php');
require_once('./Customizing/global/plugins/Modules/Cloud/CloudHook/OneDrive/classes/Client/Item/class.exodItemCache.php');
require_once('./Customizing/global/plugins/Modules/Cloud/CloudHook/OneDrive/classes/class.ilOneDrivePlugin.php');

/**
 * Class ilOneDriveActionListGUI
 *
 * @author  Fabian Schmid <fs@studer-raimann.ch>
 * @version 1.0.0
 */
class ilOneDriveActionListGUI extends ilCloudPluginActionListGUI {

	/**
	 * @var ilAdvancedSelectionListGUI
	 */
	public $selection_list;


    /**
     * @return bool
     */
    protected function checkHasAction()
    {
        // Check if this is a file that can be opened in Office Online
        if (!$this->node->getIsDir() && $this->checkOpenInOfficePerm()) {
            $file = $this->fetchExoFileByNodeId($this->node->getId());

            return !is_null($file->getMsURL());
        }

        return false;
    }


    /**
     * @return bool
     * @throws ilCloudException
     */
	protected function addItemsAfter() {
        if (!$this->node->getIsDir() && $this->checkOpenInOfficePerm()) {
            $file = $this->fetchExoFileByNodeId($this->node->getId());

            if (!is_null($file->getMsURL())) {
                $this->selection_list->addItem(ilOneDrivePlugin::getInstance()->txt('asl_open_msoffice'), 'ms', $file->getMsURL(), '', '', '_blank');
            }
        }

        return true;
    }


    /**
     * @param int $node_id
     *
     * @return exodFile|exodItem|null
     * @throws ilCloudException
     */
    protected function fetchExoFileByNodeId($node_id)
    {
        $exoFile = exodItemCache::get($node_id);

        if (!$exoFile instanceof exodFile) {
            $exoFile = $this->getService()->getClient()->getFileObject($this->node->getId());
        }

        return $exoFile;
    }


    /**
     * @return bool
     */
    private function checkOpenInOfficePerm()
    {
        global $DIC;
        $user = $DIC->user();
        $user_id = $user->getId();
        $perm = ilOneDrivePlugin::getInstance()->getPrefix() . '_asl_open_msoffice';
        $ref_id = $_GET["ref_id"];

        return $DIC->access()->checkAccessOfUser($user_id, $perm, "", $ref_id);
    }


	/**
     * @return ilOneDrive
	 */
	public function getPluginObject() {
		return parent::getPluginObject(); // TODO: Change the autogenerated stub
	}


	/**
	 * @return ilOneDriveService
	 */
	public function getService() {
		return parent::getService(); // TODO: Change the autogenerated stub
	}
}
