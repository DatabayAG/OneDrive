<?php
require_once('./Modules/Cloud/classes/class.ilCloudPluginActionListGUI.php');
require_once('./Customizing/global/plugins/Modules/Cloud/CloudHook/OneDrive/classes/Client/Item/class.exodItemCache.php');
require_once('./Customizing/global/plugins/Modules/Cloud/CloudHook/OneDrive/classes/class.ilOneDrivePlugin.php');

/**
 * Class ilOneDriveActionListGUI
 *
 * @author  Fabian Schmid <fs@studer-raimann.ch>
 * @version 1.0.0
 */
class ilOneDriveActionListGUI extends ilCloudPluginActionListGUI {

	/**
	 * @var ilAdvancedSelectionListGUI
	 */
	public $selection_list;


    /**
     * @return bool
     */
    protected function checkHasAction()
    {
        return $this->checkOpenInOfficePerm();
    }


    /**
     * @return bool
     * @throws ilCloudException
     */
	protected function addItemsAfter() {
        if (!$this->node->getIsDir() && $this->checkOpenInOfficePerm()) {
			$exoFile = exodItemCache::get($this->node->getId());
			if (!$exoFile instanceof exodFile) {
				$exoFile = $this->getService()->getClient()->getFileObject($this->node->getId());
			}
			if ($exoFile->getMsURL()) {
				$this->selection_list->addItem(ilOneDrivePlugin::getInstance()->txt('asl_open_msoffice'), 'ms', $exoFile->getMsURL(), '', '', '_blank');
			}
		}

		return true;
	}


    /**
     * @return bool
     */
    private function checkOpenInOfficePerm()
    {
        global $DIC;
        $user = $DIC->user();
        $user_id = $user->getId();
        $perm = ilOneDrivePlugin::getInstance()->getPrefix() . '_asl_open_msoffice';
        $ref_id = $_GET["ref_id"];

        return $DIC->access()->checkAccessOfUser($user_id, $perm, "", $ref_id);
    }


	/**
     * @return ilOneDrive
	 */
	public function getPluginObject() {
		return parent::getPluginObject(); // TODO: Change the autogenerated stub
	}


	/**
	 * @return ilOneDriveService
	 */
	public function getService() {
		return parent::getService(); // TODO: Change the autogenerated stub
	}
}
